package com.google.android.gms.internal.mlkit_translate;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.mlkit:translate@@17.0.1 */
/* loaded from: classes4.dex */
final class zzhi implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzhi zza = new zzhi();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbc zzbcVar = new zzbc();
        zzbcVar.zza(1);
        zzb = builder.withProperty(zzbcVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbc zzbcVar2 = new zzbc();
        zzbcVar2.zza(2);
        zzc = builder2.withProperty(zzbcVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbc zzbcVar3 = new zzbc();
        zzbcVar3.zza(37);
        zzd = builder3.withProperty(zzbcVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbc zzbcVar4 = new zzbc();
        zzbcVar4.zza(61);
        zze = builder4.withProperty(zzbcVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbc zzbcVar5 = new zzbc();
        zzbcVar5.zza(3);
        zzf = builder5.withProperty(zzbcVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbc zzbcVar6 = new zzbc();
        zzbcVar6.zza(20);
        zzg = builder6.withProperty(zzbcVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbc zzbcVar7 = new zzbc();
        zzbcVar7.zza(4);
        zzh = builder7.withProperty(zzbcVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbc zzbcVar8 = new zzbc();
        zzbcVar8.zza(29);
        zzi = builder8.withProperty(zzbcVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbc zzbcVar9 = new zzbc();
        zzbcVar9.zza(5);
        zzj = builder9.withProperty(zzbcVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbc zzbcVar10 = new zzbc();
        zzbcVar10.zza(59);
        zzk = builder10.withProperty(zzbcVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbc zzbcVar11 = new zzbc();
        zzbcVar11.zza(6);
        zzl = builder11.withProperty(zzbcVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbc zzbcVar12 = new zzbc();
        zzbcVar12.zza(79);
        zzm = builder12.withProperty(zzbcVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbc zzbcVar13 = new zzbc();
        zzbcVar13.zza(7);
        zzn = builder13.withProperty(zzbcVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbc zzbcVar14 = new zzbc();
        zzbcVar14.zza(58);
        zzo = builder14.withProperty(zzbcVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbc zzbcVar15 = new zzbc();
        zzbcVar15.zza(48);
        zzp = builder15.withProperty(zzbcVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbc zzbcVar16 = new zzbc();
        zzbcVar16.zza(49);
        zzq = builder16.withProperty(zzbcVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbc zzbcVar17 = new zzbc();
        zzbcVar17.zza(18);
        zzr = builder17.withProperty(zzbcVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbc zzbcVar18 = new zzbc();
        zzbcVar18.zza(26);
        zzs = builder18.withProperty(zzbcVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbc zzbcVar19 = new zzbc();
        zzbcVar19.zza(27);
        zzt = builder19.withProperty(zzbcVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbc zzbcVar20 = new zzbc();
        zzbcVar20.zza(28);
        zzu = builder20.withProperty(zzbcVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbc zzbcVar21 = new zzbc();
        zzbcVar21.zza(44);
        zzv = builder21.withProperty(zzbcVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbc zzbcVar22 = new zzbc();
        zzbcVar22.zza(45);
        zzw = builder22.withProperty(zzbcVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbc zzbcVar23 = new zzbc();
        zzbcVar23.zza(19);
        zzx = builder23.withProperty(zzbcVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbc zzbcVar24 = new zzbc();
        zzbcVar24.zza(21);
        zzy = builder24.withProperty(zzbcVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbc zzbcVar25 = new zzbc();
        zzbcVar25.zza(22);
        zzz = builder25.withProperty(zzbcVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbc zzbcVar26 = new zzbc();
        zzbcVar26.zza(8);
        zzA = builder26.withProperty(zzbcVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbc zzbcVar27 = new zzbc();
        zzbcVar27.zza(9);
        zzB = builder27.withProperty(zzbcVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbc zzbcVar28 = new zzbc();
        zzbcVar28.zza(10);
        zzC = builder28.withProperty(zzbcVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbc zzbcVar29 = new zzbc();
        zzbcVar29.zza(11);
        zzD = builder29.withProperty(zzbcVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbc zzbcVar30 = new zzbc();
        zzbcVar30.zza(12);
        zzE = builder30.withProperty(zzbcVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbc zzbcVar31 = new zzbc();
        zzbcVar31.zza(13);
        zzF = builder31.withProperty(zzbcVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbc zzbcVar32 = new zzbc();
        zzbcVar32.zza(14);
        zzG = builder32.withProperty(zzbcVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbc zzbcVar33 = new zzbc();
        zzbcVar33.zza(15);
        zzH = builder33.withProperty(zzbcVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbc zzbcVar34 = new zzbc();
        zzbcVar34.zza(16);
        zzI = builder34.withProperty(zzbcVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbc zzbcVar35 = new zzbc();
        zzbcVar35.zza(17);
        zzJ = builder35.withProperty(zzbcVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbc zzbcVar36 = new zzbc();
        zzbcVar36.zza(23);
        zzK = builder36.withProperty(zzbcVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbc zzbcVar37 = new zzbc();
        zzbcVar37.zza(24);
        zzL = builder37.withProperty(zzbcVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbc zzbcVar38 = new zzbc();
        zzbcVar38.zza(25);
        zzM = builder38.withProperty(zzbcVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbc zzbcVar39 = new zzbc();
        zzbcVar39.zza(39);
        zzN = builder39.withProperty(zzbcVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbc zzbcVar40 = new zzbc();
        zzbcVar40.zza(40);
        zzO = builder40.withProperty(zzbcVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbc zzbcVar41 = new zzbc();
        zzbcVar41.zza(30);
        zzP = builder41.withProperty(zzbcVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbc zzbcVar42 = new zzbc();
        zzbcVar42.zza(31);
        zzQ = builder42.withProperty(zzbcVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbc zzbcVar43 = new zzbc();
        zzbcVar43.zza(32);
        zzR = builder43.withProperty(zzbcVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbc zzbcVar44 = new zzbc();
        zzbcVar44.zza(33);
        zzS = builder44.withProperty(zzbcVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbc zzbcVar45 = new zzbc();
        zzbcVar45.zza(34);
        zzT = builder45.withProperty(zzbcVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbc zzbcVar46 = new zzbc();
        zzbcVar46.zza(35);
        zzU = builder46.withProperty(zzbcVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbc zzbcVar47 = new zzbc();
        zzbcVar47.zza(36);
        zzV = builder47.withProperty(zzbcVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbc zzbcVar48 = new zzbc();
        zzbcVar48.zza(46);
        zzW = builder48.withProperty(zzbcVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbc zzbcVar49 = new zzbc();
        zzbcVar49.zza(47);
        zzX = builder49.withProperty(zzbcVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbc zzbcVar50 = new zzbc();
        zzbcVar50.zza(69);
        zzY = builder50.withProperty(zzbcVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbc zzbcVar51 = new zzbc();
        zzbcVar51.zza(42);
        zzZ = builder51.withProperty(zzbcVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbc zzbcVar52 = new zzbc();
        zzbcVar52.zza(50);
        zzaa = builder52.withProperty(zzbcVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbc zzbcVar53 = new zzbc();
        zzbcVar53.zza(51);
        zzab = builder53.withProperty(zzbcVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbc zzbcVar54 = new zzbc();
        zzbcVar54.zza(52);
        zzac = builder54.withProperty(zzbcVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbc zzbcVar55 = new zzbc();
        zzbcVar55.zza(53);
        zzad = builder55.withProperty(zzbcVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbc zzbcVar56 = new zzbc();
        zzbcVar56.zza(54);
        zzae = builder56.withProperty(zzbcVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbc zzbcVar57 = new zzbc();
        zzbcVar57.zza(60);
        zzaf = builder57.withProperty(zzbcVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbc zzbcVar58 = new zzbc();
        zzbcVar58.zza(55);
        zzag = builder58.withProperty(zzbcVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbc zzbcVar59 = new zzbc();
        zzbcVar59.zza(56);
        zzah = builder59.withProperty(zzbcVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbc zzbcVar60 = new zzbc();
        zzbcVar60.zza(57);
        zzai = builder60.withProperty(zzbcVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbc zzbcVar61 = new zzbc();
        zzbcVar61.zza(62);
        zzaj = builder61.withProperty(zzbcVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbc zzbcVar62 = new zzbc();
        zzbcVar62.zza(63);
        zzak = builder62.withProperty(zzbcVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbc zzbcVar63 = new zzbc();
        zzbcVar63.zza(64);
        zzal = builder63.withProperty(zzbcVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbc zzbcVar64 = new zzbc();
        zzbcVar64.zza(65);
        zzam = builder64.withProperty(zzbcVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbc zzbcVar65 = new zzbc();
        zzbcVar65.zza(66);
        zzan = builder65.withProperty(zzbcVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbc zzbcVar66 = new zzbc();
        zzbcVar66.zza(67);
        zzao = builder66.withProperty(zzbcVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbc zzbcVar67 = new zzbc();
        zzbcVar67.zza(68);
        zzap = builder67.withProperty(zzbcVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbc zzbcVar68 = new zzbc();
        zzbcVar68.zza(70);
        zzaq = builder68.withProperty(zzbcVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbc zzbcVar69 = new zzbc();
        zzbcVar69.zza(71);
        zzar = builder69.withProperty(zzbcVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbc zzbcVar70 = new zzbc();
        zzbcVar70.zza(72);
        zzas = builder70.withProperty(zzbcVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbc zzbcVar71 = new zzbc();
        zzbcVar71.zza(73);
        zzat = builder71.withProperty(zzbcVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceSelfieFaceCreateLogEvent");
        zzbc zzbcVar72 = new zzbc();
        zzbcVar72.zza(74);
        zzau = builder72.withProperty(zzbcVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceSelfieFaceLoadLogEvent");
        zzbc zzbcVar73 = new zzbc();
        zzbcVar73.zza(75);
        zzav = builder73.withProperty(zzbcVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("onDeviceSelfieFaceLogEvent");
        zzbc zzbcVar74 = new zzbc();
        zzbcVar74.zza(76);
        zzaw = builder74.withProperty(zzbcVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("aggregatedOnDeviceSelfieFaceLogEvent");
        zzbc zzbcVar75 = new zzbc();
        zzbcVar75.zza(77);
        zzax = builder75.withProperty(zzbcVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbc zzbcVar76 = new zzbc();
        zzbcVar76.zza(78);
        zzay = builder76.withProperty(zzbcVar76.zzb()).build();
    }

    private zzhi() {
    }

    @Override // com.google.firebase.encoders.ObjectEncoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzlh zzlhVar = (zzlh) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, zzlhVar.zzh());
        objectEncoderContext.add(zzc, zzlhVar.zzd());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, zzlhVar.zzc());
        objectEncoderContext.add(zzf, zzlhVar.zze());
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, zzlhVar.zzf());
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, zzlhVar.zzb());
        objectEncoderContext.add(zzO, zzlhVar.zza());
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, zzlhVar.zzg());
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, (Object) null);
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
    }
}
