package com.google.android.gms.internal.mlkit_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.mlkit:common@@18.5.0 */
/* loaded from: classes4.dex */
final class zzfd implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzfd zza = new zzfd();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbh zzbhVar = new zzbh();
        zzbhVar.zza(1);
        zzb = builder.withProperty(zzbhVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbh zzbhVar2 = new zzbh();
        zzbhVar2.zza(2);
        zzc = builder2.withProperty(zzbhVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbh zzbhVar3 = new zzbh();
        zzbhVar3.zza(37);
        zzd = builder3.withProperty(zzbhVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbh zzbhVar4 = new zzbh();
        zzbhVar4.zza(61);
        zze = builder4.withProperty(zzbhVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbh zzbhVar5 = new zzbh();
        zzbhVar5.zza(3);
        zzf = builder5.withProperty(zzbhVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbh zzbhVar6 = new zzbh();
        zzbhVar6.zza(20);
        zzg = builder6.withProperty(zzbhVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbh zzbhVar7 = new zzbh();
        zzbhVar7.zza(4);
        zzh = builder7.withProperty(zzbhVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbh zzbhVar8 = new zzbh();
        zzbhVar8.zza(29);
        zzi = builder8.withProperty(zzbhVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbh zzbhVar9 = new zzbh();
        zzbhVar9.zza(5);
        zzj = builder9.withProperty(zzbhVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbh zzbhVar10 = new zzbh();
        zzbhVar10.zza(59);
        zzk = builder10.withProperty(zzbhVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbh zzbhVar11 = new zzbh();
        zzbhVar11.zza(6);
        zzl = builder11.withProperty(zzbhVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbh zzbhVar12 = new zzbh();
        zzbhVar12.zza(79);
        zzm = builder12.withProperty(zzbhVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbh zzbhVar13 = new zzbh();
        zzbhVar13.zza(7);
        zzn = builder13.withProperty(zzbhVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbh zzbhVar14 = new zzbh();
        zzbhVar14.zza(58);
        zzo = builder14.withProperty(zzbhVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbh zzbhVar15 = new zzbh();
        zzbhVar15.zza(48);
        zzp = builder15.withProperty(zzbhVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbh zzbhVar16 = new zzbh();
        zzbhVar16.zza(49);
        zzq = builder16.withProperty(zzbhVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbh zzbhVar17 = new zzbh();
        zzbhVar17.zza(18);
        zzr = builder17.withProperty(zzbhVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbh zzbhVar18 = new zzbh();
        zzbhVar18.zza(26);
        zzs = builder18.withProperty(zzbhVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbh zzbhVar19 = new zzbh();
        zzbhVar19.zza(27);
        zzt = builder19.withProperty(zzbhVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbh zzbhVar20 = new zzbh();
        zzbhVar20.zza(28);
        zzu = builder20.withProperty(zzbhVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbh zzbhVar21 = new zzbh();
        zzbhVar21.zza(44);
        zzv = builder21.withProperty(zzbhVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbh zzbhVar22 = new zzbh();
        zzbhVar22.zza(45);
        zzw = builder22.withProperty(zzbhVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbh zzbhVar23 = new zzbh();
        zzbhVar23.zza(19);
        zzx = builder23.withProperty(zzbhVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbh zzbhVar24 = new zzbh();
        zzbhVar24.zza(21);
        zzy = builder24.withProperty(zzbhVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbh zzbhVar25 = new zzbh();
        zzbhVar25.zza(22);
        zzz = builder25.withProperty(zzbhVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbh zzbhVar26 = new zzbh();
        zzbhVar26.zza(8);
        zzA = builder26.withProperty(zzbhVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbh zzbhVar27 = new zzbh();
        zzbhVar27.zza(9);
        zzB = builder27.withProperty(zzbhVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbh zzbhVar28 = new zzbh();
        zzbhVar28.zza(10);
        zzC = builder28.withProperty(zzbhVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbh zzbhVar29 = new zzbh();
        zzbhVar29.zza(11);
        zzD = builder29.withProperty(zzbhVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbh zzbhVar30 = new zzbh();
        zzbhVar30.zza(12);
        zzE = builder30.withProperty(zzbhVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbh zzbhVar31 = new zzbh();
        zzbhVar31.zza(13);
        zzF = builder31.withProperty(zzbhVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbh zzbhVar32 = new zzbh();
        zzbhVar32.zza(14);
        zzG = builder32.withProperty(zzbhVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbh zzbhVar33 = new zzbh();
        zzbhVar33.zza(15);
        zzH = builder33.withProperty(zzbhVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbh zzbhVar34 = new zzbh();
        zzbhVar34.zza(16);
        zzI = builder34.withProperty(zzbhVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbh zzbhVar35 = new zzbh();
        zzbhVar35.zza(17);
        zzJ = builder35.withProperty(zzbhVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbh zzbhVar36 = new zzbh();
        zzbhVar36.zza(23);
        zzK = builder36.withProperty(zzbhVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbh zzbhVar37 = new zzbh();
        zzbhVar37.zza(24);
        zzL = builder37.withProperty(zzbhVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbh zzbhVar38 = new zzbh();
        zzbhVar38.zza(25);
        zzM = builder38.withProperty(zzbhVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbh zzbhVar39 = new zzbh();
        zzbhVar39.zza(39);
        zzN = builder39.withProperty(zzbhVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbh zzbhVar40 = new zzbh();
        zzbhVar40.zza(40);
        zzO = builder40.withProperty(zzbhVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbh zzbhVar41 = new zzbh();
        zzbhVar41.zza(30);
        zzP = builder41.withProperty(zzbhVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbh zzbhVar42 = new zzbh();
        zzbhVar42.zza(31);
        zzQ = builder42.withProperty(zzbhVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbh zzbhVar43 = new zzbh();
        zzbhVar43.zza(32);
        zzR = builder43.withProperty(zzbhVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbh zzbhVar44 = new zzbh();
        zzbhVar44.zza(33);
        zzS = builder44.withProperty(zzbhVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbh zzbhVar45 = new zzbh();
        zzbhVar45.zza(34);
        zzT = builder45.withProperty(zzbhVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbh zzbhVar46 = new zzbh();
        zzbhVar46.zza(35);
        zzU = builder46.withProperty(zzbhVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbh zzbhVar47 = new zzbh();
        zzbhVar47.zza(36);
        zzV = builder47.withProperty(zzbhVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbh zzbhVar48 = new zzbh();
        zzbhVar48.zza(46);
        zzW = builder48.withProperty(zzbhVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbh zzbhVar49 = new zzbh();
        zzbhVar49.zza(47);
        zzX = builder49.withProperty(zzbhVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbh zzbhVar50 = new zzbh();
        zzbhVar50.zza(69);
        zzY = builder50.withProperty(zzbhVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbh zzbhVar51 = new zzbh();
        zzbhVar51.zza(42);
        zzZ = builder51.withProperty(zzbhVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbh zzbhVar52 = new zzbh();
        zzbhVar52.zza(50);
        zzaa = builder52.withProperty(zzbhVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbh zzbhVar53 = new zzbh();
        zzbhVar53.zza(51);
        zzab = builder53.withProperty(zzbhVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbh zzbhVar54 = new zzbh();
        zzbhVar54.zza(52);
        zzac = builder54.withProperty(zzbhVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbh zzbhVar55 = new zzbh();
        zzbhVar55.zza(53);
        zzad = builder55.withProperty(zzbhVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbh zzbhVar56 = new zzbh();
        zzbhVar56.zza(54);
        zzae = builder56.withProperty(zzbhVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbh zzbhVar57 = new zzbh();
        zzbhVar57.zza(60);
        zzaf = builder57.withProperty(zzbhVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbh zzbhVar58 = new zzbh();
        zzbhVar58.zza(55);
        zzag = builder58.withProperty(zzbhVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbh zzbhVar59 = new zzbh();
        zzbhVar59.zza(56);
        zzah = builder59.withProperty(zzbhVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbh zzbhVar60 = new zzbh();
        zzbhVar60.zza(57);
        zzai = builder60.withProperty(zzbhVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbh zzbhVar61 = new zzbh();
        zzbhVar61.zza(62);
        zzaj = builder61.withProperty(zzbhVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbh zzbhVar62 = new zzbh();
        zzbhVar62.zza(63);
        zzak = builder62.withProperty(zzbhVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbh zzbhVar63 = new zzbh();
        zzbhVar63.zza(64);
        zzal = builder63.withProperty(zzbhVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbh zzbhVar64 = new zzbh();
        zzbhVar64.zza(65);
        zzam = builder64.withProperty(zzbhVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbh zzbhVar65 = new zzbh();
        zzbhVar65.zza(66);
        zzan = builder65.withProperty(zzbhVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbh zzbhVar66 = new zzbh();
        zzbhVar66.zza(67);
        zzao = builder66.withProperty(zzbhVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbh zzbhVar67 = new zzbh();
        zzbhVar67.zza(68);
        zzap = builder67.withProperty(zzbhVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbh zzbhVar68 = new zzbh();
        zzbhVar68.zza(70);
        zzaq = builder68.withProperty(zzbhVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbh zzbhVar69 = new zzbh();
        zzbhVar69.zza(71);
        zzar = builder69.withProperty(zzbhVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbh zzbhVar70 = new zzbh();
        zzbhVar70.zza(72);
        zzas = builder70.withProperty(zzbhVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbh zzbhVar71 = new zzbh();
        zzbhVar71.zza(73);
        zzat = builder71.withProperty(zzbhVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceSelfieFaceCreateLogEvent");
        zzbh zzbhVar72 = new zzbh();
        zzbhVar72.zza(74);
        zzau = builder72.withProperty(zzbhVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceSelfieFaceLoadLogEvent");
        zzbh zzbhVar73 = new zzbh();
        zzbhVar73.zza(75);
        zzav = builder73.withProperty(zzbhVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("onDeviceSelfieFaceLogEvent");
        zzbh zzbhVar74 = new zzbh();
        zzbhVar74.zza(76);
        zzaw = builder74.withProperty(zzbhVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("aggregatedOnDeviceSelfieFaceLogEvent");
        zzbh zzbhVar75 = new zzbh();
        zzbhVar75.zza(77);
        zzax = builder75.withProperty(zzbhVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbh zzbhVar76 = new zzbh();
        zzbhVar76.zza(78);
        zzay = builder76.withProperty(zzbhVar76.zzb()).build();
    }

    private zzfd() {
    }

    @Override // com.google.firebase.encoders.ObjectEncoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, Object obj2) throws IOException {
        zzjc zzjcVar = (zzjc) obj;
        ObjectEncoderContext objectEncoderContext = (ObjectEncoderContext) obj2;
        objectEncoderContext.add(zzb, zzjcVar.zzf());
        objectEncoderContext.add(zzc, zzjcVar.zzd());
        objectEncoderContext.add(zzd, (Object) null);
        objectEncoderContext.add(zze, (Object) null);
        objectEncoderContext.add(zzf, zzjcVar.zze());
        objectEncoderContext.add(zzg, (Object) null);
        objectEncoderContext.add(zzh, (Object) null);
        objectEncoderContext.add(zzi, (Object) null);
        objectEncoderContext.add(zzj, (Object) null);
        objectEncoderContext.add(zzk, (Object) null);
        objectEncoderContext.add(zzl, (Object) null);
        objectEncoderContext.add(zzm, (Object) null);
        objectEncoderContext.add(zzn, (Object) null);
        objectEncoderContext.add(zzo, (Object) null);
        objectEncoderContext.add(zzp, (Object) null);
        objectEncoderContext.add(zzq, (Object) null);
        objectEncoderContext.add(zzr, (Object) null);
        objectEncoderContext.add(zzs, (Object) null);
        objectEncoderContext.add(zzt, (Object) null);
        objectEncoderContext.add(zzu, (Object) null);
        objectEncoderContext.add(zzv, (Object) null);
        objectEncoderContext.add(zzw, (Object) null);
        objectEncoderContext.add(zzx, (Object) null);
        objectEncoderContext.add(zzy, (Object) null);
        objectEncoderContext.add(zzz, (Object) null);
        objectEncoderContext.add(zzA, (Object) null);
        objectEncoderContext.add(zzB, (Object) null);
        objectEncoderContext.add(zzC, (Object) null);
        objectEncoderContext.add(zzD, (Object) null);
        objectEncoderContext.add(zzE, (Object) null);
        objectEncoderContext.add(zzF, (Object) null);
        objectEncoderContext.add(zzG, (Object) null);
        objectEncoderContext.add(zzH, (Object) null);
        objectEncoderContext.add(zzI, (Object) null);
        objectEncoderContext.add(zzJ, (Object) null);
        objectEncoderContext.add(zzK, (Object) null);
        objectEncoderContext.add(zzL, (Object) null);
        objectEncoderContext.add(zzM, (Object) null);
        objectEncoderContext.add(zzN, zzjcVar.zzb());
        objectEncoderContext.add(zzO, zzjcVar.zza());
        objectEncoderContext.add(zzP, (Object) null);
        objectEncoderContext.add(zzQ, (Object) null);
        objectEncoderContext.add(zzR, (Object) null);
        objectEncoderContext.add(zzS, (Object) null);
        objectEncoderContext.add(zzT, (Object) null);
        objectEncoderContext.add(zzU, (Object) null);
        objectEncoderContext.add(zzV, (Object) null);
        objectEncoderContext.add(zzW, (Object) null);
        objectEncoderContext.add(zzX, (Object) null);
        objectEncoderContext.add(zzY, (Object) null);
        objectEncoderContext.add(zzZ, (Object) null);
        objectEncoderContext.add(zzaa, (Object) null);
        objectEncoderContext.add(zzab, zzjcVar.zzc());
        objectEncoderContext.add(zzac, (Object) null);
        objectEncoderContext.add(zzad, (Object) null);
        objectEncoderContext.add(zzae, (Object) null);
        objectEncoderContext.add(zzaf, (Object) null);
        objectEncoderContext.add(zzag, (Object) null);
        objectEncoderContext.add(zzah, (Object) null);
        objectEncoderContext.add(zzai, (Object) null);
        objectEncoderContext.add(zzaj, (Object) null);
        objectEncoderContext.add(zzak, (Object) null);
        objectEncoderContext.add(zzal, (Object) null);
        objectEncoderContext.add(zzam, (Object) null);
        objectEncoderContext.add(zzan, (Object) null);
        objectEncoderContext.add(zzao, (Object) null);
        objectEncoderContext.add(zzap, (Object) null);
        objectEncoderContext.add(zzaq, (Object) null);
        objectEncoderContext.add(zzar, (Object) null);
        objectEncoderContext.add(zzas, (Object) null);
        objectEncoderContext.add(zzat, (Object) null);
        objectEncoderContext.add(zzau, (Object) null);
        objectEncoderContext.add(zzav, (Object) null);
        objectEncoderContext.add(zzaw, (Object) null);
        objectEncoderContext.add(zzax, (Object) null);
        objectEncoderContext.add(zzay, (Object) null);
    }
}
